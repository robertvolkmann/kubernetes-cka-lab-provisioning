---
{% for cluster in kubernetes.cluster %}
{% if cluster.install_network %}
- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ cluster.master[0].ip }}
    create: yes

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Init Kubernetes cluster {{ cluster.name }}-{{ cluster.master[0].name }}
  shell: |
    kubeadm init --pod-network-cidr {{ cluster.network.pod_network_cidr }} \
                 --apiserver-advertise-address {{ cluster.master[0].ip }} \
                 --apiserver-cert-extra-sans {{ cluster.master[0].ip }} \
                 --token {{ kubernetes_token }}
  when: ansible_hostname == '{{ cluster.name }}-{{ cluster.master[0].name }}'

{% else %}
- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ cluster.master[0].ip }}
    create: yes

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Init Kubernetes cluster {{ cluster.name }}-{{ cluster.master[0].name }}
  shell: |
    kubeadm init --token {{ kubernetes_token }} \
                 --apiserver-advertise-address {{ cluster.master[0].ip }} \
                 --apiserver-cert-extra-sans {{ cluster.master[0].ip }}
  when: ansible_hostname == '{{ cluster.name }}-{{ cluster.master[0].name }}'
{% endif%}
{% endfor%}

- name: Create Kubernetes config directory
  file:
    path: "~/.kube/"
    state: directory

- name: Copy admin.conf to Home directory
  shell: cp /etc/kubernetes/admin.conf ~/.kube/config
